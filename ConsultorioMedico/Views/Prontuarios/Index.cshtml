@model PagedList.IPagedList<ConsultorioMedico.Models.Prontuario>
@using PagedList.Mvc;

<h2>Index</h2>
<h4>Prontuario</h4>

<p>
    @Html.ActionLink("Criar Novo", "Create")
</p>

<div class="table-responsive">
    <table class="table table-hover">
        <tr>
            <th>
                @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IDSortParm, @scope = "col" })
            </th>
            <th>
                @Html.ActionLink("Nome do Paciente", "Index", new { sortOrder = ViewBag.NomeSortParm })
            </th>
            <th>
                @Html.ActionLink("Nome do Medico", "Index", new { sortOrder = ViewBag.MedicoSortParm })
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProntuarioID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consulta.Paciente.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consulta.Medico.Nome)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.ProntuarioID }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.ProntuarioID }) |
                    @Html.ActionLink("Deletar", "Delete", new { id = item.ProntuarioID })
                </td>
            </tr>
        }

    </table>
    <br />
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>